dist: xenial
sudo: false
language: cpp
branches:
  only:
    - master
    - 5.6-dev
    - 5.7-dev
git:
  depth: 1

matrix:
  include:
    # GCC on Linux.
    - os: linux
      arch: amd64
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-7 C_COMPILER=gcc-7"
    - os: linux
      arch: arm64
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-7 C_COMPILER=gcc-7"
        - MXXRU_TOOLSET=gcc_linux

    - os: linux
      arch: amd64
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8']
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-8 C_COMPILER=gcc-8"

    - os: linux
      arch: amd64
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-9']
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-9 C_COMPILER=gcc-9"

    # clang on Linux
    - os: linux
      arch: amd64
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-xenial-6.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-6.0', "g++-7"]
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-6.0 C_COMPILER=clang-6.0"
    - os: linux
      arch: arm64
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-xenial-6.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-6.0', "g++-7"]
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-6.0 C_COMPILER=clang-6.0"
        - MXXRU_TOOLSET=clang_linux

    - os: linux
      arch: amd64
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-xenial-7', 'ubuntu-toolchain-r-test']
          packages: ['clang-7', "g++-7"]
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-7 C_COMPILER=clang-7"

    - os: linux
      arch: amd64
      compiler: clang
      addons:
        apt:
          sources: ['llvm-toolchain-xenial-8', 'ubuntu-toolchain-r-test']
          packages: ['clang-8', "g++-7"]
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-8 C_COMPILER=clang-8"

    - os: linux
      arch: amd64
      compiler: clang
      addons:
        apt:
          sources:
             - sourceline: 'ppa:ubuntu-toolchain-r/test'
             - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
               key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: ['clang-9', "g++-9"]
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-9 C_COMPILER=clang-9"

    - os: linux
      arch: amd64
      compiler: clang
      addons:
        apt:
          sources:
             - sourceline: 'ppa:ubuntu-toolchain-r/test'
             - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
               key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: ['clang-10', "g++-9"]
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-10 C_COMPILER=clang-10"
        
    # clang on macOS
    - os: osx
      osx_image: xcode10.2
      compiler: clang
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++ C_COMPILER=clang"
    - os: osx
      osx_image: xcode10.3
      compiler: clang
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++ C_COMPILER=clang"
    - os: osx
      osx_image: xcode11.1
      compiler: clang
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++ C_COMPILER=clang"
    - os: osx
      osx_image: xcode11.2
      compiler: clang
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++ C_COMPILER=clang"
    - os: osx
      osx_image: xcode11.3.1
      compiler: clang
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++ C_COMPILER=clang"
    - os: osx
      osx_image: xcode11.4
      compiler: clang
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++ C_COMPILER=clang"

before_install:
   - eval "${MATRIX_EVAL}"

script:
   - |
     if [ -z "$MXXRU_TOOLSET" ]; then
         mkdir build;
         cd build;
         cmake -DBUILD_ALL=ON -DCMAKE_INSTALL_PREFIX=target -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER -DCMAKE_BUILD_TYPE=Release ../dev/;
         make -j4;
         ctest --output-on-failure;
     else
         gem install Mxx_ru;
         cd dev;
         cp local-build.rb.example local-build.rb
         export MXX_RU_CPP_TOOLSET="${MXXRU_TOOLSET} cpp_compiler_name=${CXX_COMPILER} c_compiler_name=${C_COMPILER} linker_name=${CXX_COMPILER_NAME}"
         ruby test/so_5/samples_as_unit_tests/build_tests.rb;
     fi

notifications:
  email:
    recipients:
      - eao197@gmail.com
#    on_success: always
#    on_failure: always
